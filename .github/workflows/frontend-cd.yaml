name: Frontend Continuous Deployment

on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
  push:
    branches:
      - main # Trigger only when push to main branch
    paths:
      - 'frontend/**'  # Trigger only when changes occur in the frontend application

defaults:
  run:
    working-directory: ./frontend
jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test

  deploy:
    name: Building
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Docker image
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 -t ${{ vars.ECR_REGISTRY }}/frontend:${{ github.sha }} .
          docker tag ${{ vars.ECR_REGISTRY }}/frontend:${{ github.sha }} ${{ vars.ECR_REGISTRY }}/frontend:latest
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Log in to ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry: ${{ vars.ECR_REGISTRY }}
      - name: Push Docker Image to ECR
        run: |
          docker push ${{ vars.ECR_REGISTRY }}/frontend:${{ github.sha }}
          docker push ${{ vars.ECR_REGISTRY }}/frontend:latest
